name: Deploy to Fly.io

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  deploy:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    name: Deploy to Fly.io
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.18"
          otp-version: "27"

      - name: Get current version and increment
        id: version
        run: |
          # Extrai a versão atual do arquivo mix.exs
          CURRENT_VERSION=$(grep -m 1 'version:' mix.exs | sed -E 's/.*version: "([^"]+)".*/\1/')
          echo "Current version: $CURRENT_VERSION"

          # Divide a versão em partes (major.minor.patch)
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          # Incrementa o número do patch
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "New version: $NEW_VERSION"

          # Define as variáveis para uso nas etapas posteriores
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "TAG=v$NEW_VERSION" >> $GITHUB_ENV

      - name: Create Release Tag
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag -a ${{ env.TAG }} -m "Release ${{ env.NEW_VERSION }}"
          # Utiliza o PAT_TOKEN para ter permissão de escrita
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/alexnogueirasilva/devaction-elixir.git ${{ env.TAG }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
